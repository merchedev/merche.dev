# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Production

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  deployment:
    environment: Production
    runs-on: ubuntu-latest

    strategy:
      matrix:
      environment: [Production]
        node-version: [20.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:

    - name: SSH Remote Commands
  # You may pin to the exact commit or the version.
  # uses: appleboy/ssh-action@f9010ff7f1bbd7db1a0b4bab661437550cea20c0
      uses: appleboy/ssh-action@v0.1.5
      env:
        USERNAME: ${{secrets.MERXER_USERNAME}}
        HOST: ${{secrets.HOST}}
        PORT: ${{secrets.PORT}}
        DB_NAME: ${{secrets.DB_NAME}}
        DB_HOST: ${{secrets.DB_HOST}}
        BASE: ${{secrets.BASE}}
        SECRET: ${{secrets.SECRET}}
        SALT_ROUNDS: ${{secrets.SALT_ROUNDS}}
        DIR: ${{secrets.DIR}}
      with:
        host: ${{secrets.MERXER_IP}}
        username: ${{secrets.MERXER_USERNAME}}
        password: ${{secrets.MERXER_PASSWORD}}
        envs: USERNAME,HOST,PORT,DB_NAME,DB_HOST,BASE,SECRET,SALT_ROUNDS,DIR
        script: |
          echo 'Dir environment variable... "${DIR}"'
          if [ ! -d "${DIR}" ];
          then
            sudo mkdir -p "${DIR}"
            sudo chown -R $USER:$USER "${DIR}"
            sudo chmod -R 755 /var/www/*
          fi

          cd "${DIR}"
          if [ -d .git ]; then
            git fetch --all && git reset --hard origin/main
            rm -d -r node_modules
            rm package-lock.json
          else
            git clone git@github.com:merchedev/merche.dev.git .
          fi

          if [ ! -f .env ]; then
          cat <<EOT > "${DIR}".env
          NODE_ENV=production
          HOST="${HOST}"
          PORT="${PORT}"
          DB_NAME="${DB_NAME}"
          DB_HOST="${DB_HOST}"
          BASE="${BASE}"
          SECRET="${SECRET}"
          SALT_ROUNDS="${SALT_ROUND}"
          EOT
          fi

          npm i
          node_modules/.bin/webpack
          pm2 start ecosystem.config.js
